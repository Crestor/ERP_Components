@using ERP_Component_DAL.Models;
@{
    ViewBag.Title = "View Sales Forecast";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

@model List<SalesForecast>

<link rel="stylesheet" href="~/css/Product.css" />

<div class="table">
    <table>
        <thead>
            <tr>
                <th>Sr no</th>
                <th>Discription</th>
                <th>Created On</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count > 0)
            {
                int i = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td>@i</td>
                        <td>@item.Description</td>
                        <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
                        <td>
                            <button onclick="getitemsofsalesforcast('@item.RequisitionID')">View</button>
                        </td>
                    </tr>
                    i++;
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">No Sales Forecasts available.</td>
                </tr>
            }
    </table>
</div>
<div class="overlay" id="overlay">
      <div id="forecastCardsContainer"></div>
</div>
<script>
    function getitemsofsalesforcast(requisitionId) {
        $.ajax({
            type: 'POST',
            url: '/Manager/ViewSalesForCastItems',
            data: { requisitionId: requisitionId },
            success: function (response) {
                console.log("Response received:", response);

                document.getElementById("overlay").style.display = "flex";

                const container = document.getElementById("forecastCardsContainer");
                container.innerHTML = "";

                const items = response.list || response;

                if (!items || items.length === 0) {
                    container.className = "forecast-card";
                    container.innerHTML = "<p>No forecast items found.</p>";
                    return;
                }

                items.forEach((item, index) => {
                    const stage = item.workOrderStatus || 0;
                    const totalStages = 5;
                    const percent = Math.round((stage / totalStages) * 100);
                    const statusText = getStatusText(stage);

                    const card = document.createElement("div");
                    card.className = "forecast-card";

                    card.innerHTML = `
                        <div class="card-header">
                            <strong>Item ${index + 1}</strong>
                        </div>
                        <div class="card-body">
                            <p><strong>Item Name:</strong> ${item.itemName}</p>
                                    <p><strong>Specification:</strong> ${item.specification}</p>
                            <p><strong>Quantity:</strong> ${item.quantity}</p>
                            <p><strong>Status:</strong> ${statusText}</p>
                            <div class="progress-bar-wrapper">
                                <div class="progress-bar" style="width: ${percent}%; background-color: ${getStageColor(percent)};">
                                    ${percent}%
                                </div>
                            </div>
                        </div>
                    `;
                    container.appendChild(card);
                });
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
                document.getElementById("forecastCardsContainer").innerHTML = '<p>Error loading data.</p>';
            }
        });
    }

    function getStageColor(percent) {
        if (percent >= 80) return '#2ecc71';
        if (percent >= 50) return '#f1c40f';
        return '#e74c3c';
    }

    function getStatusText(status) {
        switch (status) {
            case 1: return "Pending";
            case 2: return "Weaving";
            case 3: return "Dyeing";
            case 4: return "Complete";
            case 5: return "Dispatch";
            default: return "Unknown";
        }
    }
    document.getElementById("overlay").addEventListener("click", function () {
        document.getElementById("overlay").style.display = "none";
        document.getElementById("forecastCardsContainer").innerHTML = "";
    });
</script>
