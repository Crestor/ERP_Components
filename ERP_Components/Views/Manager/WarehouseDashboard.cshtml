@using ERP_Component_DAL.Models;
@model DashBoard
@{
    ViewBag.Title = "Warehouse Dashboard";
    ViewBag.UserName = "Himalyan Silk Mills";
}




<link href="~/css/Product.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script asp-append-version="true" src="~/lib/jquery/dist/jquery.min.js"></script>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .topbar {
        margin: 10px;
        background-color: #a14040;
        color: white;
        padding: 10px 30px;
        text-align: center;
        font-size: 1.5rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .dashboard {
        padding: 10px;
    }

    .chart-container {
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        display: flex;
        justify-content: center;
        height: 400px;
    }

    .top-tabs {
        cursor:pointer;
        display: flex;
        justify-content: space-evenly;
        gap: 30px;
        margin-bottom: 20px;
        border-bottom: 2px solid #ccc;
    }

    .tab-card {
        display: flex;
        justify-content: center;
        padding: 12px 20px;
        font-size: 1.2rem;
        cursor: pointer;
        position: relative;
        color: #666;
        transition: all 0.3s ease;
    }

        .tab-card.active {
            color: #138496;
            font-weight: bold;
        }

            .tab-card.active::after {
                content: '';
                position: absolute;
                bottom: -2px;
                left: 0;
                height: 3px;
                width: 100%;
                background-color: #138496;
            }


    .info-box-icon .fas {
        color: #138496 !important;
        background: white !important;
    }

    .info-box-icon .bi {
        color: #138496 !important;
        background: white !important;
    }

    .info-box-content {
        font-size: 18px;
    }

    .shadow-sm {
        color: #138496 !important;
        background: none !important;
    }

   
</style>






<div class="top-tabs">
    <div onclick="location.href='@Url.Action("ManagerDashboard", "Manager")'" class="tab-card">
        <span class="info-box-icon">
            <i class="fas fa-shopping-cart"></i>
        </span>
        <div class="info-box-content">
            <span class="info-box-text">Sales Dashboard</span>

        </div>
    </div>
    <div onclick="location.href='@Url.Action("PurchaseDashboard", "Manager")'" class="tab-card">
        <span class="info-box-icon" >
            <i class="fas fa-clock"></i>
        </span>
        <div class="info-box-content">
            <span class="info-box-text">Purchase Dashboard</span>

        </div>
    </div>
    <div onclick="location.href='@Url.Action("StoreDashboard", "Manager")'" class="tab-card">
        <span class="info-box-icon">
            <i class="bi bi-cart-fill"></i>
        </span>
        <div class="info-box-content">
            <span class="info-box-text">Store Dashboard</span>

        </div>
    </div>
    <div onclick="location.href='@Url.Action("ProductionDashboard", "Manager")'" class="tab-card">
        <span class="info-box-icon">
            <i class="bi bi-truck"></i>
        </span>
        <div class="info-box-content">
            <span class="info-box-text">Production Dashboard</span>

        </div>
    </div>
    
        <div onclick="location.href='@Url.Action("WarehouseDashboard", "Manager")'" class="tab-card active" data-target="warehouseDashboard">
            <span class="info-box-icon">
                <i class="fas fa-warehouse me-2"></i>
            </span>
            <div class="info-box-content">
                <span class="info-box-text">Warehouse Dashboard</span>

            </div>
        </div>
    
</div>




<div class="app-content" style="margin-top:60px">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                    <span class="info-box-icon text-bg-primary shadow-sm">
                        <i class="fas fa-warehouse"></i>
                    </span>
                    <div class="info-box-content">
                        <span class="info-box-text">Total Storage Items</span>
                        <span class="info-box-number">@Model.TotalStorageItems units</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                    <span class="info-box-icon text-bg-primary shadow-sm">
                        <i class="bi bi-box-seam"></i>
                    </span>
                    <div class="info-box-content">
                        <span class="info-box-text">Used Capacity</span>
                        <span class="info-box-number">72%</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                    <span class="info-box-icon shadow-sm">
                        <i class="bi bi-truck"></i>
                    </span>
                    <div class="info-box-content">
                        <span class="info-box-text">Incoming Shipments</span>
                        <span class="info-box-number">8 Today</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                    <span class="info-box-icon text-bg-primary shadow-sm">
                        <i class="bi bi-box-arrow-up"></i>
                    </span>
                    <div class="info-box-content">
                        <span class="info-box-text">Pending Dispatch</span>
                        <span class="info-box-number">@Model.PendingDispatch Orders</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<main class="dashboard">
    <section class="charts">
        <!-- Row 1 -->
        <div style="display:flex;justify-content:space-around;width:100%" class="mb-4">
            <div class="chart-container" style="width:450px !important">
                <canvas id="StockMovementChart"></canvas>
            </div>
            <div class="chart-container" style="width:450px !important">
                <canvas id="WarehouseCapacityChart"></canvas>
            </div>
        </div>
        <!-- Row 2 -->
        <div style="display:flex;justify-content:space-around;width:100%">
            <div class="chart-container" style="width:450px !important">
                <canvas id="ItemCategoryChart"></canvas>
            </div>
            <div class="chart-container" style="width:450px !important">
                <canvas id="DispatchPerformanceChart"></canvas>
            </div>
        </div>
    </section>
</main>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@using Newtonsoft.Json
@* <script>
        const modelData = @Html.Raw(Json.Serialize(Model.Stockdata));
    const pieChartData = @Html.Raw(Json.Serialize(Model.PieChartData));
</script> *@
<script asp-append-version="true" src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
            const modelData = @Html.Raw(JsonConvert.SerializeObject(Model.Stockdata));
        // Step 1: Group and sum Stock In and Stock Out by month
        const monthlyData = {};
        modelData.forEach(item => {
            const date = new Date(item.LastUpdated);
            const monthKey = date.toLocaleString('default', { month: 'short', year: 'numeric' }); // e.g., "Jun 2025"
            if (!monthlyData[monthKey]) {
                monthlyData[monthKey] = { inStock: 0, stockOut: 0 };
            }
            monthlyData[monthKey].inStock += item.InStock || 0;
            monthlyData[monthKey].stockOut += item.TotalOrder || 0; // replace with actual stock out property if needed
        });
        // Step 2: Prepare labels and datasets
        const labels = Object.keys(monthlyData);
        const stockInData = labels.map(month => monthlyData[month].inStock);
        const stockOutData = labels.map(month => monthlyData[month].stockOut);
        // Step 3: Create the Chart
        new Chart(document.getElementById('StockMovementChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Stock In',
                        data: stockInData,
                        backgroundColor: '#138496'
                    },
                    {
                        label: 'Stock Out',
                        data: stockOutData,
                        backgroundColor: '#DEE2E6'
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Monthly Stock Movement'
                    }
                }
            }
        });
        // Warehouse Capacity Chart
        new Chart(document.getElementById('WarehouseCapacityChart').getContext('2d'), {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'Used Capacity (%)',
                    data: [60, 63, 68, 70, 72, 75],
                    borderColor: '#138496',
                    backgroundColor: '#dee2e6',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'Warehouse Capacity Trend'
                    }
                }
            }
        });
        // Item Category Chart
    const pieChartData = @Html.Raw(JsonConvert.SerializeObject(Model.PieChartData));
      const pieLabels = pieChartData.map(item => item.CategoryName);
    const dataValues = pieChartData.map(item => item.TotalStock);
    const backgroundColors = ['#55d5e9', '#2BCBE4', '#19ACC3', '#138496'];
    new Chart(document.getElementById('ItemCategoryChart').getContext('2d'), {
        type: 'pie',
        data: {
            labels: pieLabels,
            datasets: [{
                data: dataValues,
                backgroundColor: backgroundColors.slice(0, pieLabels.length)
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                 text: 'Inventory Distribution by Category'
                }
            }
        }
    });
        // Dispatch Performance Chart
        new Chart(document.getElementById('DispatchPerformanceChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                datasets: [{
                    label: 'Dispatched Orders',
                    data: [12, 14, 9, 16, 18, 11],
                    backgroundColor: '#19ACC3'
                }]
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'Weekly Dispatch Performance'
                    }
                }
            }
        });

</script>


<script>
        document.querySelectorAll('.tab-card').forEach(tab => {
        tab.addEventListener('click', () => {

            document.querySelectorAll('.tab-card').forEach(t => t.classList.remove('active'));
            tab.classList.add('active');


            document.querySelectorAll('.dashboard-section').forEach(section => section.style.display = 'none');


            const targetId = tab.getAttribute('data-target');
            document.getElementById(targetId).style.display = 'block';
        });
    });

</script>




