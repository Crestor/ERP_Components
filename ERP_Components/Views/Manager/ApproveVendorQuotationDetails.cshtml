@using ERP_Component_DAL.Models;
@{
	ViewBag.Title = "Vendor Quotation";
	Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

@model Vendor

<link rel="stylesheet" href="~/css/Product.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>


<style>
	.styled-checkbox {
		width: 18px;
		height: 18px;
		accent-color: #28a745; 
		cursor: pointer;
	}
</style>
<div class="row row-cols-1 row-cols-md-3 g-4 p-5">
    @for (int i = 0; i < Model.lists.Count; i++)
    {
        var v = Model.lists[i];
        <div class="col">
			<div class="card vendor-card" data-vendorid="@v.vendorId" style="width: 18rem; cursor: pointer;">
				<i class="fa fa-user w-100 d-flex justify-content-center align-items-center flex-column mt-1" style="height:75px;font-size:35px">
					<p>@v.vendorName</p>
				</i>
				<div class="card-body">
					<p class="card-text">Amount: <span>@v.amount.ToString("0.00")</span></p>
					<p class="card-text">Discount Amount: <span>@v.discountAmount.ToString("0.00")</span></p>
					<p class="card-text">Final Amount: <span>@v.finalAmount.ToString("0.00")</span></p>
					<p class="card-text">Advance Amount: <span>@v.advancedAmount.ToString("0.00")</span></p>
					<p class="card-text">Delivery Terms: <span>@v.deliveryTerms <small>Days</small></span></p>
					<p class="card-text">Credit Period: <span>@v.creditPeriod <small>Days</small></span></p>
				</div>
			</div>

        </div>
    }
</div>



 
 <div class="overlay">
		<div class="Popuptable">
		  <table>
			<thead>
				<tr>
					<th>S.No</th>
					<th>Item Name</th>
					<th>Unit Price</th>
				</tr>
			</thead>
			 <tbody id="geeks">
			 </tbody>
		  </table>
		</div>
 </div>
	<script>
		window.onload = function () {
			let total = 0;
			document.querySelectorAll('.total-amount').forEach(cell => {
				total += parseFloat(cell.textContent) || 0;
			});
		};
	</script>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const approveButtons = document.querySelectorAll(".approve-btn");

		approveButtons.forEach(button => {
			button.addEventListener("click", function (event) {
				event.preventDefault(); 

				const form = this.closest("form"); 

				Swal.fire({
					title: "Are you sure?",
					text: "Do you want to confirm?",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#3085d6",
					cancelButtonColor: "#d33",
					confirmButtonText: "Yes, confirm it!",
					cancelButtonText: "Cancel"
				}).then((result) => {
					if (result.isConfirmed) {
						form.submit(); 
					}
				});
			});
		});
	});
</script>
<script>

	document.addEventListener("DOMContentLoaded", function () {
		document.querySelectorAll(".vendor-card").forEach(function (card) {
			card.addEventListener("click", function () {
				const vendorId = this.getAttribute("data-vendorid");

				// AJAX call to fetch items by vendor ID
				fetch(`/Vendor/GetVendorItems?vendorId=${vendorId}`)
					.then(response => response.json())
					.then(data => {
						const tableBody = document.getElementById("geeks");
						tableBody.innerHTML = "";

						if (data.length > 0) {
							data.forEach((item, index) => {
								const row = `
									<tr>
										<td>${index + 1}</td>
										<td>${item.itemName}</td>
										<td>${item.unitPrice}</td>
									</tr>
								`;
								tableBody.innerHTML += row;
							});
						} else {
							tableBody.innerHTML = `<tr><td colspan="3">No items found.</td></tr>`;
						}

						document.querySelector(".overlay").style.display = "flex";
					})
					.catch(error => {
						console.error("Error fetching items:", error);
					});
			});
		});
	});
</script>

