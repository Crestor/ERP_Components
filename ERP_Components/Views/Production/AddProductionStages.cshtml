@model ERP_Component_DAL.Models.MaterialforProductionStage

@{
    ViewBag.Title = "Add Stages";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

<link rel="stylesheet" href="~/css/Product.css" />

<div class="form-section">
    <h3>Add Work Stages</h3>

    <form method="post" asp-controller="Production" asp-action="AddProductionStagesDetails" id="stageForm">

        <!-- Product Dropdown -->
        <div class="form-row w-50">
            <label class="required">Product</label>
            <select name="productId" required>
                <option value="">-- Select Product --</option>
                @foreach (var product in Model.products)
                {
                    <option value="@product.itemId">@product.itemName</option>
                }
            </select>
        </div>


        <div id="hiddenStagesContainer"></div>

        <div id="currentStageInput">
            <div class="form-row">
                <label class="required">Stage Number</label>
                <input type="number" id="stageNumber" min="1" />

                <label class="required">Stage Work</label>
                <input type="text" id="stageWork" />
            </div>

            <div class="form-row">

                <label class="required">Input Material</label>
                <select id="inputMaterialId">
                    <option value="">-- Select Input Material --</option>
                    @foreach (var mat in Model.materials)
                    {
                        <option value="@mat.itemId">@mat.itemName</option>
                    }
                </select>
                <label class="required">Input Quantity</label>
                <input type="text" id="inputQty" />
            </div>

            <div id="outputFields"></div>

            <div class="button">
                <button type="button" onclick="addOutput()">Add Output</button>
                <button class="d-none" id="stagebutton" type="button" onclick="saveStage()">Next Stage</button>
            </div>
        </div>

        <div class="table d-none mt-4" id="table">
            <table id="stageSummaryTable" style="display:none;">
                <thead>
                    <tr>
                        <th>Stage</th>
                        <th>Stage Work</th>
                        <th>Input Qty</th>
                        <th>Input Material</th>
                        <th>Outputs</th>
                    </tr>
                </thead>
                <tbody id="stageSummaryBody"></tbody>
            </table>
        </div>

        <div id="submitbutton" class="button d-none">
            <button type="submit">Submit</button>
        </div>
    </form>
</div>

<script>
    let stageIndex = 0;

    const materialMap = {
    @foreach (var mat in Model.materials)
    {
        @: "@mat.itemId": "@mat.itemName",
    }
    };

    const outputMaterialOptions = `@Html.Raw(string.Join("", Model.materials.Select(m =>
        $"<option value='{m.itemId}'>{m.itemName}</option>")))`;

    function addOutput() {
        const outputContainer = document.getElementById("outputFields");

        const html = `
            <div class="form-row output-group">
                <label>Output Material</label>
                <select class="outputMaterialId">
                    <option value="">-- Select Output Material --</option>
                    ${outputMaterialOptions}
                </select>
                <label>Output Quantity</label>
                <input type="text" class="outputQty" />
            </div>
        `;

        outputContainer.insertAdjacentHTML('beforeend', html);
        document.getElementById("stagebutton").classList.remove("d-none");
    }

    function saveStage() {
        const stageNumber = document.getElementById("stageNumber").value.trim();
        const stageWork = document.getElementById("stageWork").value.trim();
        const inputQty = document.getElementById("inputQty").value.trim();
        const inputMaterialId = document.getElementById("inputMaterialId").value.trim();
        const outputs = document.querySelectorAll(".output-group");

        if (!stageNumber || !stageWork || !inputQty || !inputMaterialId || outputs.length === 0) {
            alert("Fill all fields and add at least one output.");
            return;
        }

        const hiddenContainer = document.getElementById("hiddenStagesContainer");
        let html = `
            <input type="hidden" name="Stages[${stageIndex}].stage" value="${stageNumber}" />
            <input type="hidden" name="Stages[${stageIndex}].stageWork" value="${stageWork}" />
            <input type="hidden" name="Stages[${stageIndex}].inputMaterial.quantity" value="${inputQty}" />
            <input type="hidden" name="Stages[${stageIndex}].inputMaterial.materialId" value="${inputMaterialId}" />
        `;

        let outputSummary = [];
        outputs.forEach((group, i) => {
            const qty = group.querySelector(".outputQty").value.trim();
            const id = group.querySelector(".outputMaterialId").value.trim();
            if (qty && id) {
                html += `<input type="hidden" name="Stages[${stageIndex}].outputMaterial[${i}].quantity" value="${qty}" />`;
                html += `<input type="hidden" name="Stages[${stageIndex}].outputMaterial[${i}].materialId" value="${id}" />`;
                const name = materialMap[id] || id;
                outputSummary.push(`(${name}:${qty})`);
            }
        });

        hiddenContainer.insertAdjacentHTML("beforeend", html);

        const inputName = materialMap[inputMaterialId] || inputMaterialId;

        const rowHtml = `
            <tr>
                <td>${stageNumber}</td>
                <td>${stageWork}</td>
                <td>${inputQty}</td>
                <td>${inputName}</td>
                <td>${outputSummary.join(",")}</td>
            </tr>
        `;

        document.getElementById("stageSummaryBody").insertAdjacentHTML("beforeend", rowHtml);
        document.getElementById("stageSummaryTable").style.display = "table";
        document.getElementById("table").classList.remove("d-none");
        document.getElementById("submitbutton").classList.remove("d-none");

        // Clear fields for next stage
        document.getElementById("stageNumber").value = "";
        document.getElementById("stageWork").value = "";
        document.getElementById("inputQty").value = "";
        document.getElementById("inputMaterialId").selectedIndex = 0;
        document.getElementById("outputFields").innerHTML = "";

        stageIndex++;
    }
</script>

