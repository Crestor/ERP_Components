@using ERP_Component_DAL.Models;
@{
    ViewBag.Title = "Production Order";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

@model List<Production>
<link rel="stylesheet" href="~/css/Product.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<div class="button-container" style="margin-bottom:20px; display:flex; justify-content:space-around">
    <button onclick="showSection('pending')">Pending</button>
    <button onclick="showSection('complete')">Complete</button>
    <button onclick="showSection('inprogress')">In Progress</button>
</div>

<div class="vendor-section">

    @* Pending Orders *@
    @{
        var pendingOrders = Model.Where(x => x.productStatus == 1).ToList();
    }
    <div class="table" id="pending" style="display: block;">
      
        <table>
            <thead>
                <tr>
                    <th>Sr no.</th>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Order Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < pendingOrders.Count; i++)
                {
                    var x = pendingOrders[i];
                    var index = i + 1;
                    <tr id="row-@x.productionOrderId">
                        <td>@index</td>
                        <td>@x.productName</td>
                        <td>@x.quantity</td>
                        <td>@x.createdAt.ToShortDateString()</td>
                        <td>
                            <div class="table-button">
                            <button onclick="location.href='@Url.Action("ViewProductionOrderDetail","Production", new { ProductionOrderId = x.productionOrderId })'">View Material</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* Completed Orders *@
    @{
        var completedOrders = Model.Where(x => x.productStatus == 3).ToList();
    }
    <div class="table" id="complete" style="display: none;">
        <table>
            <thead>
                <tr>
                    <th>Sr no.</th>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Order Date</th>
                    @* <th>Action</th> *@
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < completedOrders.Count; i++)
                {
                    var x = completedOrders[i];
                    var index = i + 1;
                    <tr id="row-@x.productionOrderId">
                        <td>@index</td>
                        <td>@x.productName</td>
                        <td>@x.quantity</td>
                        <td>@x.createdAt.ToShortDateString()</td>
                   @*      <td>
                            <div class="table-button">
                                <button class="btn btn-primary dispatch-btn" data-productionid="@x.productionOrderId" data-productid="@x.productId">Dispatch   </button>
                            </div>

                       </td> *@
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* In Progress Orders *@
    @{
        var inProgressOrders = Model.Where(x => x.productStatus == 2).ToList();
    }
    <div class="table" id="inprogress" style="display: none;">
        <table>
            <thead>
                <tr>
                    <th>Sr no.</th>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Order Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < inProgressOrders.Count; i++)
                {
                    var x = inProgressOrders[i];
                    var index = i + 1;
                    <tr id="row-@x.productionOrderId, @x.productId">
                        <td>@index</td>
                        <td>@x.productName</td>
                        <td>@x.quantity</td>
                        <td>@x.createdAt.ToShortDateString()</td>
                        <td>
                            <div class="table-button">
                                <button onclick="location.href='@Url.Action("UpdateProductionStage","Production", new { ProductionOrderId = x.productionOrderId, productId = x.productId})'">View Stages</button>
                       </div>
                        
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
 
</div>

<script>
    function showSection(sectionId) {
        localStorage.setItem("selectedSection", sectionId);
        document.querySelectorAll('.vendor-section > div').forEach(el => el.style.display = 'none');
        document.getElementById(sectionId).style.display = 'block';
    }
    document.addEventListener("DOMContentLoaded", function () {
        var sectionId = localStorage.getItem("selectedSection") || "pending";
        showSection(sectionId);
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const dispatchButtons = document.querySelectorAll(".dispatch-btn");

        dispatchButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.getAttribute("data-productid");
                const productionOrderId = this.getAttribute("data-productionid");

                Swal.fire({
                    title: "Are you sure?",
                    text: "You are about to dispatch this production order.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, dispatch it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: "Dispatched!",
                            text: "Your file has been dispatched.",
                            icon: "success",
                            timer: 1500,
                            timerProgressBar: true,
                            showConfirmButton: false
                        }).then(() => {
                            const url = `/Production/DispatchProductionOrder?productId=${productId}&productionOrderId=${productionOrderId}`;
                            window.location.href = url;
                        });
                    }
                });
            });
        });
    });
</script>

