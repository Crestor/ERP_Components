@using ERP_Component_DAL.Models;


@{
    ViewBag.Title = "Vendor";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

<link rel="stylesheet" href="~/css/Product.css">

 @model List<AddCustomer>

@* <style>
    .tab-buttons {
        display: flex;
        justify-content: space-between;
        padding: 20px 40px;
        /* background-color: #f8f9fa; */
        border-radius: 10px;
        margin: 20px auto;
        width: 90%;
    }

    .tab-button {
        padding: 10px 20px;
        background-color: #023e8a;
        color: #fff;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .tab-button:hover {
            background-color: #0077b6;
            transform: scale(1.05);
        }

    .table-actions {
        display: flex;
        float: right;
        padding-right: 20px;
        gap: 10px;
        margin: 10px 30px;
    }

        .table-actions button {
            padding: 6px 16px;
            border: none;
            background-color: #023e8ac7;
            color: white;
            width: 80px;
            border-radius: 4px;
            cursor: pointer;
        }
</style>
 *@




    <h2>View Vendor</h2>

<div class="">
    <div style="display:flex;justify-content:space-between">
        <div class="button" style="justify-content:start;margin-left:35px">
            <button onclick="showSection('main')">Basic Details</button>
            <button onclick="showSection('address')">Address</button>
            <button onclick="showSection('bank')">Account Details</button>
        </div>

        <div class="buttonforeditanddelete">

            <button style="background-color:#FFC30E" onclick="editSelected()" id="editBtn" disabled>Edit</button>
            <button style="background-color:#dc3545" onClick="confirmDelete()" id="deleteBtn" disabled>Delete</button>
        </div>
    </div>
    <div class="table">
        <div class="vendor-section" id="main" style="display: block;">
        <table class="vendor-table" >
            <thead>
                <tr>
                    <th></th>
                    <th>S.No.</th>
                    <th>Vendor Name</th>
                    <th>Contact Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Gst</th>
                    <th>Pan</th>
                    <th>Vendor Industry</th>
                    <th>Balance</th>
                    <th>Created On</th>

                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.CustomerId">
                        <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                        <td>@(i + 1)</td>
                        <td>@v.CustomerName</td>
                        <td>@v.ContactName</td>
                        <td>@v.Email</td>
                        <td>@v.ContactNo</td>
                        <td>@v.GstIn</td>
                        <td>@v.PAN</td>
                        <td>@v.vendorIndustry</td>
                        <td>@v.Balance</td>
                        <td>@v.OpeningDate.ToShortDateString()</td>


                    </tr>
                }
            </tbody>
        </table>
    </div>


        <div class="vendor-section" id="address" style="display: none;">
            <table>
                <thead>
                    <tr>
                        <th></th>
                        <th>S.No.</th>
                        <th>Address</th>
                        <th>Country</th>
                        <th>State</th>
                        <th>District</th>
                        <th>City</th>



                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Count; i++)
                    {
                        var v = Model[i];
                        <tr data-id="@v.AddressId">
                            <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                            <td>@(i + 1)</td>
                            <td>@v.Address</td>
                            <td>@v.Country</td>
                            <td>@v.State</td>
                            <td>@v.District</td>
                            <td>@v.City</td>


                        </tr>
                    }
                </tbody>
            </table>
        </div>


        <div class="vendor-section" id="bank" style="display: none;">
            <table >
                <thead>
                    <tr>
                        <th></th>
                        <th>S.No.</th>
                        <th>Account Holder Name</th>
                        <th>Account Number</th>
                        <th>Branch Name</th>
                        <th>IFSC Code</th>

                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Count; i++)
                    {
                        var v = Model[i];
                        <tr data-id="@v.AccountId">
                            <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                            <td>@(i + 1)</td>
                            <td>@v.AccountHolderName</td>
                            <td>@v.AccountNo</td>
                            <td>@v.BranchName</td>
                            <td>@v.IfscCode</td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
   </div>
</div>



<script>
    function showSection(sectionId) {
        document.querySelectorAll('.vendor-section').forEach(el => el.style.display = 'none');
        document.getElementById(sectionId).style.display = 'block';
        clearCheckboxes();
    }

    function toggleActionButtons(checkbox) {
        document.querySelectorAll('.row-check').forEach(cb => {
            if (cb !== checkbox) cb.checked = false;
        });
        const selected = document.querySelector('.row-check:checked');
        document.getElementById("editBtn").disabled = !selected;
        document.getElementById("deleteBtn").disabled = !selected;
    }

    function getSelectedVendorId() {
        const row = document.querySelector('.row-check:checked')?.closest('tr');
        return row?.getAttribute('data-id');
    }

    function editSelected() {
        const id = getSelectedVendorId();
        if (id) {
            window.location.href = '@Url.Action("editVendor", "Vendor")' + '?vendorId=' + id;
        }
    }

    function confirmDelete() {
        const customerId = getSelectedVendorId();

            if (customerId) {
             Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then((result) => {
            if (result.isConfirmed) {
                  if (customerId) {


                            let url = `/Customer/DeleteCustomer?customerId=${customerId}`;

                console.log('Redirecting to', url);
                window.location.href = url;
              }
            }
          });

        }
    }


    function clearCheckboxes() {
        document.querySelectorAll('.row-check').forEach(cb => cb.checked = false);
        toggleActionButtons(null);
    }
</script>

































