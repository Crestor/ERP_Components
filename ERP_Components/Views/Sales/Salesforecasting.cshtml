@model ERP_Component_DAL.Models.QuotationViewModel
@{
    ViewBag.Title = "Sales forecasting";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}
<link rel="stylesheet" href="~/css/ProductTwo.css" />

<form method="post" asp-action="SetSalesForecast" asp-controller="Sales">
    <div class="form-section">
        <h3>Items</h3>
        <div class="form-row">
            <label for="SalesSeries">Sales Series</label>
            <input type="text" name="RequisitionSeries" id="RequisitionSeries" readonly />

            <label for="ItemName">Item Name</label>
            <select id="ItemId" class="form-control">
                <option selected disabled>Select Product</option>
                @foreach (var product in Model.ItemNames)
                {
                    <option value="@product.ItemId">@product.ItemName</option>
                }
            </select>
        </div>

        <div class="form-row">
            <label for="Description">Description</label>
            <input type="text" id="Description" name="description" />
            <label for="Quantity">Quantity</label>
            <input type="number" id="Quantity" />
        </div>
        <div class="button">
           <button type="button" class="button" id="addItem" style="margin: 10px 0; background-color:#138496;color: white;">Add</button>
        </div>
    </div>

 


        <div id="showtable" style="display:none">

   
        <div style="margin: 10px; float:right">
            <button type="button" id="editSelected" class="button">
                Edit 
            </button>
            <button type="button" id="saveSelected" class="button" style="black; display:none;">
                Save
            </button>
        </div>


        <div class="table">
            <table>
                <thead>
                    <tr>
                        <th>S.No</th>
                        <th>Item Name</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody id="TableBody"></tbody>
            </table>
        </div>
        </div>


 

    <div style="text-align:right; margin:10px 20px;">
        <button type="submit" class="button" style="background-color:#138496;color: white;">Submit</button>
    </div>
</form>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>
    let itemList = [];

    function renderTable() {
        const tableBody = document.getElementById("TableBody");
        tableBody.innerHTML = "";

        itemList.forEach((item, index) => {
            const tr = document.createElement("tr");

            tr.innerHTML = `
                    <tr>
        <td><input type="checkbox" class="rowCheckbox" data-index="${index}" />${index + 1}</td>
        <td>
            <input type="text" name="requisitionItems[${index}].itemName" value="${item.itemName}" class="form-control" readonly />
        </td>
        <td>
            <input type="number" name="requisitionItems[${index}].quantity" value="${item.quantity}" class="form-control" readonly />
        </td>
        <input type="hidden" name="requisitionItems[${index}].itemId" value="${item.itemId}" />
    </tr>

            `;

            tableBody.appendChild(tr);
        });

        document.getElementById("showtable").style.display = itemList.length > 0 ? "block" : "none";
    }

    $("#addItem").click(function () {
        const itemId = $("#ItemId").val();
        const itemName = $("#ItemId option:selected").text();
        const description = $("#Description").val();
        const quantity = $("#Quantity").val();

        if (!itemId || !quantity) {
            Swal.fire("Required", "Please fill all required fields!", "warning");
            return;
        }

        itemList.push({
            itemId,
            itemName,
            quantity
        });

        renderTable();

        $("#Quantity").val("");
        $("#ItemId").val("");
    });

    // Edit Button
    $("#editSelected").click(function () {
        const checkedRows = $(".rowCheckbox:checked");

        if (checkedRows.length === 0) {
            Swal.fire("No row selected", "", "warning");
            return;
        }

        // Show Save button
        $("#saveSelected").show();

        // Make selected rows editable
        checkedRows.each(function () {
            const row = $(this).closest("tr");
            row.find("input[type='text'], input[type='number']").prop("readonly", false);
        });
    });

    // Save Button
    $("#saveSelected").click(function () {
        $(".rowCheckbox:checked").each(function () {
            const row = $(this).closest("tr");
            const index = $(this).data("index");

            const updatedItemName = row.find("input[name^='ItemList'][name$='.ItemName']").val();
            const updatedQuantity = row.find("input[name^='ItemList'][name$='.Quantity']").val();

            // Update itemList
            itemList[index].itemName = updatedItemName;
            itemList[index].quantity = updatedQuantity;

            // Set fields back to readonly
            row.find("input[type='text'], input[type='number']").prop("readonly", true);
        });

        Swal.fire("Saved!", "Changes have been saved.", "success");

        // Hide Save button again
        $("#saveSelected").hide();

        // Uncheck all
        $(".rowCheckbox").prop("checked", false);
        $("#selectAll").prop("checked", false);
    });

  
    $("#selectAll").click(function () {
        $(".rowCheckbox").prop("checked", this.checked);
    });
</script>


<script>

    document.addEventListener("DOMContentLoaded", function () {
        const orderInput = document.getElementById("RequisitionSeries");
        const year = new Date().getFullYear();
        let nextNumber = 1;
        let lastOrder = localStorage.getItem("lastQuotationSeries");

        if (lastOrder) {
            let parts = lastOrder.split("-");
            let lastYear = parseInt(parts[1]);
            let lastNum = parseInt(parts[2]);
            if (lastYear === year) {
                nextNumber = lastNum + 1;
            }
        }

        const newSeries = `SS-${year}-${String(nextNumber).padStart(4, "0")}`;
        orderInput.value = newSeries;
        localStorage.setItem("lastQuotationSeries", newSeries);
    });
</script>


