@using ERP_Component_DAL.Models;
<link rel="stylesheet" href="~/css/Product.css">

@model List<Items>

<style>
    .tab-buttons {
        display: flex;
        justify-content: space-between;
        padding: 20px 40px;
        /* background-color: #f8f9fa; */
        border-radius: 10px;
        margin: 20px auto;
        width: 90%;
        /* box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05); */
    }

    .tab-button {
        padding: 10px 20px;
        background-color: #023e8a;
        color: #fff;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .tab-button:hover {
            background-color: #0077b6;
            transform: scale(1.05);
        }

    .table-actions {
        display: flex;
        float: right;
        padding-right: 20px;
        gap: 10px;
        margin: 10px 30px;
    }

        .table-actions button{
            padding: 6px 16px;
            border: none;
            background-color: #023e8ac7;
            color: white;
            width: 80px;
            border-radius: 4px;
            cursor: pointer;
        }
</style>





<div>
    <h4>View Materials</h4>
</div>

<div class="container">
    <div class="tab-buttons">
        <button onclick="showSection('main')">Main Details</button>
        <button onclick="showSection('address')">Lot Details</button>
        <button onclick="showSection('bank')">Stock Details</button>
    </div>

    <div class="table-actions">

        <button onclick="editSelected()" id="editBtn" disabled>Edit</button>
        <button onClick="confirmDelete()" id="deleteBtn" style="background-color:#d01313c2" disabled>Delete</button>
    </div>


    <div class="vendor-section" id="main" style="display: block;">
        <table class="vendor-table">
            <thead>
                <tr>
                    <th></th>
                    <th>S.No.</th>
                    <th>Item Name</th>
                    <th>Stock Keeping Unit</th>
                    <th>HSN</th>
                    <th>Specification</th>
                     <th>Unit Price</th>
                    <th>Unit Of Measurement</th>
                  
               
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.itemId">
                        <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                        <td>@(i + 1)</td>
                        <td>@v.itemName</td>
                        <td>@v.SKU</td>
                        <td>@v.HSN</td>
                        <td>@v.specification</td>
                        <td>@v.unitPrice</td>
                        <td>@v.UOM</td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="vendor-section" id="address" style="display: none;">
        <table class="vendor-table">
            <thead>
                <tr>
                    <th></th>
                    <th>S.No.</th>
                    <th>Item Name</th>
                    <th>Lot Series</th>
                    <th>Manufacturing Date</th>
                    <th>Expiry Date</th>
                    <th>Delivered Date</th>
                 
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.lotId">
                        <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                        <td>@(i + 1)</td>
                        <td>@v.itemName</td>
                        <td>@v.lotSeries</td>
                        <td>@v.manufacture.ToShortDateString()</td>
                        <td>@v.expiry.ToShortDateString()</td>
                        <td>@v.deliverd.ToShortDateString()</td>
                       
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="vendor-section" id="bank" style="display: none;">
        <table class="vendor-table">
            <thead>
                <tr>
                    <th></th>
                    <th>S.No.</th>
                    <th>Item Name</th>
                    <th>Warehouse</th>
                    <th>In Stock</th>
                    <th>Stock Alert</th>
                   
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.inventoryId">
                        <td><input type="checkbox" class="row-check" onchange="toggleActionButtons(this)"></td>
                        <td>@(i + 1)</td>
                        <td>@v.itemName</td>
                        <td>@v.warehouse</td>
                        <td>@v.inStock</td>
                        <td>@v.stockAlert</td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>




    <script>
    function showSection(sectionId) {
        document.querySelectorAll('.vendor-section').forEach(el => el.style.display = 'none');
        document.getElementById(sectionId).style.display = 'block';
        clearCheckboxes();
    }

    function toggleActionButtons(checkbox) {
        document.querySelectorAll('.row-check').forEach(cb => {
            if (cb !== checkbox) cb.checked = false;
        });
        const selected = document.querySelector('.row-check:checked');
        document.getElementById("editBtn").disabled = !selected;
        document.getElementById("deleteBtn").disabled = !selected;
    }

    function getSelectedVendorId() {
        const row = document.querySelector('.row-check:checked')?.closest('tr');
        return row?.getAttribute('data-id');
    }

    function editSelected() {
        const id = getSelectedVendorId();
        const activeSection = document.querySelector('.vendor-section:not([style*="display: none"])').id;

        if (id && activeSection) {
            const sectionParam = encodeURIComponent(activeSection);
            const url = '@Url.Action("EditMaterial", "Inventory")' + `?itemId=${id}&section=${sectionParam}`;
            window.location.href = url;
        }
    }

    function clearCheckboxes() {
        document.querySelectorAll('.row-check').forEach(cb => cb.checked = false);
        document.getElementById("editBtn").disabled = true;
        document.getElementById("deleteBtn").disabled = true;
    }
</script>

<script>
    function confirmDelete() {
        const vendorId = getSelectedVendorId();

            if (vendorId) {
             Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then((result) => {
            if (result.isConfirmed) {
                  if (vendorId) {


                            let url = `/Benifitiary/DeleteVendor?vendorId=${vendorId}`;

                console.log('Redirecting to', url);
                window.location.href = url;
              }
            }
          });

        }
    }


    function clearCheckboxes() {
        document.querySelectorAll('.row-check').forEach(cb => cb.checked = false);
        toggleActionButtons(null);
    }
</script>

