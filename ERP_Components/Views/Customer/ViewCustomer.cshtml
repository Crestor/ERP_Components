@using ERP_Component_DAL.Models;
@{
    ViewBag.Title = "View Customer";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}


<link rel="stylesheet" href="~/css/Product.css" />
@* <link rel="stylesheet" href="~/css/ListQuotation.css" /> *@

 @model List<AddCustomer>
<div class="tab-buttons" style="padding-left: 10px;padding-top: 10px; gap:5px">
    <button class="button me-2 tab-btn" data-section="main" onclick="showSection('main')">Basic Details</button>
    <button class="button me-2 tab-btn" data-section="address" onclick="showSection('address')">Address</button>
</div>


    <div class="vendor-section" id="main" style="display: block;">
        <table>
            <thead>
                <tr>
                    <th>S.No.</th>
                    <th>Customer Name</th>
                    <th>Contact Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Gst</th>
                    <th>Pan</th>
                    <th>Balance</th>
                    <th>Action</th>
               
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.CustomerId">
                        <td>@(i + 1)</td>
                        <td>@v.CustomerName</td>
                        <td>@v.ContactName</td>
                        <td>@v.Email</td>
                        <td>@v.ContactNo</td>
                        <td>@v.GstIn</td>
                        <td>@v.PAN</td>
                        <td>@v.Balance</td>
                        <td><button onclick="location.href='@Url.Action("EditCustomer","Customer", new{customerId = v.CustomerId},null)'">Edit</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="vendor-section" id="address" style="display: none;">
        <table>
            <thead>
                <tr>
                    <th>S.No.</th>
                    <th>Address</th>
                  
                    <th>Street</th>
                    <th>Country</th>
                    <th>State</th>
                    <th>District</th>
                    <th>City</th>
                    <th>Action</th>
                    
                

                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Count; i++)
                {
                    var v = Model[i];
                    <tr data-id="@v.AddressId">
                        <td>@(i + 1)</td>
                        <td>@v.Address</td>
                       
                        <td>@v.Street</td>
                        <td>@v.Country</td>
                        <td>@v.State</td>
                        <td>@v.District</td>
                        <td>@v.City</td>
                        <td><button onclick="location.href='@Url.Action("EditCustomer","Customer", new{customerId = v.CustomerId})'">Edit</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>



<script>
          function showSection(sectionId) {
        document.querySelectorAll('.vendor-section').forEach(el => el.style.display = 'none');
        document.getElementById(sectionId).style.display = 'block';
        document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
        const clickedBtn = document.querySelector(`.tab-btn[data-section="${sectionId}"]`);
        if (clickedBtn) {
            clickedBtn.classList.add('active');
        }

        clearCheckboxes();
    }



    function toggleActionButtons(checkbox) {
        document.querySelectorAll('.row-check').forEach(cb => {
            if (cb !== checkbox) cb.checked = false;
        });
        const selected = document.querySelector('.row-check:checked');
        document.getElementById("editbutton").disabled = !selected;
        document.getElementById("deletebutton").disabled = !selected;
    }

    function getSelectedVendorId() {
        const row = document.querySelector('.row-check:checked')?.closest('tr');
        return row?.getAttribute('data-id');
    }

    function editSelected() {
        const id = getSelectedVendorId();
        if (id) {
            window.location.href = '@Url.Action("EditCustomer", "Customer")' + '?customerId=' + id;
        }
    }

    function confirmDelete() {
        const customerId = getSelectedVendorId();

            if (customerId) {
             Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#138496",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then((result) => {
            if (result.isConfirmed) {
                  if (customerId) {


                            let url = `/Customer/DeleteCustomer?customerId=${customerId}`;

                console.log('Redirecting to', url);
                window.location.href = url;
              }
            }
          });

        }
    }


    function clearCheckboxes() {
        document.querySelectorAll('.row-check').forEach(cb => cb.checked = false);
        toggleActionButtons(null);
    }


</script>