@using ERP_Component_DAL.Models;
<link rel="stylesheet" href="~/css/ProductTwo.css" />

@{
    ViewBag.Title = "Register User";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}


<div class="container">
    <form asp-action="RegisterCustomer" asp-controller="Customer" enctype="multipart/form-data">


      <div class="form-section">
        <h3>Basic Details</h3>
            <div class="form-row">
                
                    <label for="gst">GST No </label>
                    <input type="text" id="gstin" name="GstIn" maxlength="15" pattern="[0-9A-Z]{15}" placeholder="Enter a GST Number" />
                      <input id="vendorCode"  type="hidden"/>
                    <div id="gstError" class="error-message"></div>
               
                
                    <label for="pan">PAN No</label>
                    <input type="text" id="panno" name="PAN" maxlength="10" pattern="[A-Z]{5}[0-9]{4}[A-Z]{1}" placeholder="Enter PAN Number (e.g., ABCDE1234F)" />
                    <div id="panError" class="error-message"></div>
              
            </div>
            <div class="form-row">
                    <label for="CustomerName">Customer Name<span class="required">*</span></label>
                    <input type="text" id="CustomerName" name="CustomerName" placeholder="Enter Customer Name" required>
                    <label for="email">Email </label>
                    <input type="email" id="Email" name="Email" placeholder="Enter Email ID" />
              </div>
                <div class="form-row">
                    <label for="ContactNo">Contact No </label>
                    <input type="text" id="Contact" name="ContactNo" placeholder="Enter Contact Number" />

                    <label for="AlternteContactNo">Alternate Contact No </label>
                    <input type="text" id="Contact" name="alterContactNo" placeholder="Enter Alternate Contact Number" />

                </div>
           
      </div>
      <div class="form-section">
        <h3>Opening Balance</h3>
            <div class="form-row">
                    <label for="date">As On Date<span class="required">*</span></label>
                    <input type="date" id="date" name="OpeningDate" required>
                    <label for="Balance">Balance</label>
                    <input type="text" id="Balance" name="Balance">

             </div>
              <div class="form-row" style="width:50%">
                <div class="field" id="modeRow">
                    <label for="mode">Mode</label>
                    <select id="mode" name="Mode">
                        <option selected disabled>-Select-</option>
                        <option value="Credit">Credit</option>
                        <option value="Debit">Debit</option>
                    </select>
                 </div>
             </div>
       </div>
      <div class="form-section">
        <h3>Billing Details</h3>
            <div class="form-row">
                    <label for="country">Country<span class="required">*</span></label>
                    <select id="country" name="Country" required>
                        <option selected disabled>-Select-</option>
                        <option value="India">India</option>
                    </select>
                    <label for="state">State<span class="required">*</span></label>
                    <select id="state" name="State" required>
                    <option selected disabled>-Select State-</option>
                    </select>

            </div>
            <div class="form-row">
                    <label for="district">District<span class="required">*</span></label>
                    <select id="district" name="District" required>
                    <option selected disabled>-Select District-</option>
                    </select>
                    <label for="city">City<span class="required">*</span></label>
                    <input type="text" id="city" name="City" />
             </div>
            <div class="form-row">

                    <label for="pin">Pin Code<span class="required">*</span></label>
                    <input type="text" id="pin" name="PinCode" required>
                    <label for="address">Address(Line1)<span class="required">*</span></label>
                    <input type="text" id="address" name="Address" required>
             </div>
      </div>
        
       <div class="form-section">
        <h3>Bank Details</h3>
            <div class="form-row">
                    <label for="accountHolder">Account Holder Name<span class="required">*</span></label>
                    <input type="text" id="accountHolder" name="AccountHolderName" required>
                    <label for="bankName">Bank Name<span class="required">*</span></label>
                    <input type="text" id="bankName" name="BankName" required>
            </div>

            <div class="form-row">
                    <label for="branchName">Branch Name<span class="required">*</span></label>
                    <input type="text" id="branchName" name="BranchName" required>
                    <label for="accountNo">Account Number<span class="required">*</span></label>
                    <input type="text" id="AccountNumber" name="AccountNo" required>
                </div>

                <div class="form-row">
                    <label for="reconfirm">Re-confirm Account Number<span class="required">*</span></label>
                    <input type="text" id="ConfirmAccountNumber" name="reconfirm" required>
                    <label for="ifsc">IFSC<span class="required">*</span></label>
                    <input type="text" id="ifsc" name="IfscCode" required>
                </div>
        </div>

      <div class="form-section">
        <h3>Shipping Details</h3>
            <div class="form-row">
                    <label for="CustomerName">Customer Name</label>
                    <input type="text" id="CustomerName" name="CustomerName">
                    <label for="ContactNo">ContactNo</label>
                    <input type="text" id="ContactNo" name="ContactNo">
            </div>

            <div class="form-row">
                    <label for="Street">Street/Locality</label>
                    <input type="text" name="Street">
                    <label for="Area">Area</label>
                    <input type="text" id="Area" name="Area" required />
             </div>
                <div class="form-row">
                    <label for="state">State<span class="required">*</span></label>
                    <input id="state" name="State" required />

                    <label for="district">District<span class="required">*</span></label>
                    <input id="district" name="District" required />
                </div>

         
            <div class="form-row">
                    <label for="City">City</label>
                    <input type="text" id="City" name="City" />

                    <label for="PinCode">PinCode</label>
                    <input type="text" id="PinCode" name="PinCode" />
              </div>
                <div class="form-row" style="width:50%">

                    <label for="other">Other Reference</label>
                    <input id="other" name="other" />
            </div>
        </div>

     <div class="form-section">
        <h3>Upload Document(Optional)</h3>
            <div class="form-row">
             @*    <div class="field"> *@
                    <label for="GstCertificate">Upload  Gst Certificate</label>
                    <input name="GstCertificate" type="file" placeholder="Enter a file" />
        @*         </div>
                <div class="field"> *@
                    <label for="PanCard">Upload  Pan Card</label>
                    <input name="PanCard" type="file" placeholder="Enter a file" />
            @*     </div> *@
            </div>
            <div class="form-row" style="width:50%">
            @*     <div class="field"> *@
                    <label for="Other">Other</label>
                    <input type='file' placeholder="Enter a file" />
            @*     </div> *@
              </div>
                <div class="form-row">
               @*      <div class="field"> *@
                        <label for="CustomerName">Customer Name<span class="required">*</span></label>
                        <input type="text" id="CustomerName" name="ContactName" placeholder="Enter Customer Name" required>
              @*       </div>
                    <div class="field"> *@
                        <label for="CustomerName">Industry<span class="required">*</span></label>
                        <input type="text" id="CustomerName" name="CustomerIndustry" placeholder="Enter Industry type" required>
                 @*    </div>
                    <div class="field"> *@

            </div>
            <div class="form-row" style="width:50%">
                        <label for="CustomerName">Customer Code<span class="required">*</span></label>
                        <input type="text" id="CustomerName" name="CustomerCode" placeholder="Enter Customer Code" required>
               @*      </div> *@
                </div>
            </div>
            <div class="form-section">
            <h3>Additional Remark</h3>
                <div class="form-row">
               @*      <div class="field"> *@
                        <textarea></textarea>
                  @*   </div> *@
                </div>
            </div>
        <div class="button-container" style="padding-right: 30px;float: right; padding-bottom:13px">
            <button type="submit">Submit</button>
            <button type="reset">Reset</button>
        </div>
    </form>

</div>


<script>
    function validateForm() {
       const gst = document.getElementById('gst').value.trim();
    // const gst = document.getElementById('gstin').value.trim();

        const pan = document.getElementById('pan').value.trim();
    const accountNo = document.getElementById('AccountNumber').value.trim();
    const reconfirm = document.getElementById('ConfirmAccountNumber').value.trim();

        if (gst === "" && pan === "") {
            alert("Please enter either GST No or PAN No.");
            return false;
        }

        if (accountNo === "" || reconfirm === "") {
            alert("Please fill both Account Number and Re-confirm Account Number.");
            return false;
        }

        if (accountNo !== reconfirm) {
            alert("Account Number and Re-confirm Account Number do not match.");
            return false;
        }

        return true;
    }


</script>
<script>
         let statesData = null;

         async function fetchData(url) {
        try {
            const response = await fetch(url);
            statesData = await response.json();
            console.log("Fetched data:", statesData);
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    }

        async function populateStates() {
            console.log("Populating states...");
            await fetchData("/Json/city.json");

            const stateSelect = document.getElementById("state");
            if (statesData && statesData.states) {
                statesData.states.forEach((state) => {
                    let option = new Option(state.name, state.name);
                    stateSelect.add(option);
                });
            }
        }




        async function updateDistricts() {
            const stateName = document.getElementById("state").value;
            const districtSelect = document.getElementById("district");
            districtSelect.innerHTML = '<option value="">-Select District-</option>';

            if (!stateName) return;

            const selectedState = statesData.states.find(state => state.name === stateName);
            if (selectedState && selectedState.districts) {
                selectedState.districts.forEach((district) => {
                    let option = new Option(district.name, district.name);
                    districtSelect.add(option);
                });
            }
        }



        async function updateCities() {
            const stateName = document.getElementById("state").value;
            const districtName = document.getElementById("district").value;
            const citySelect = document.getElementById("city");

            citySelect.innerHTML = '<option value="">-Select City-</option>';

            if (!stateName || !districtName) return;

            const selectedState = statesData.states.find(state => state.name === stateName);
            const selectedDistrict = selectedState.districts.find(district => district.name === districtName);

            if (selectedDistrict && selectedDistrict.cities) {
                selectedDistrict.cities.forEach(city => {
                    let option = new Option(city, city);
                    citySelect.add(option);
                });
            }

            citySelect.add(new Option("Other", "other"));
        }




    function checkOtherCity(select) {
        if (select.value === "other") {
            document.getElementById("cityModal").style.display = "flex";
            select.value = "";
        }
    }

    function closeCityModal() {
        document.getElementById("cityModal").style.display = "none";
        document.getElementById("newCity").value = "";
    }

    document.getElementById("state").addEventListener("change", updateDistricts);
    document.getElementById("district").addEventListener("change", updateCities);


    window.onload = populateStates;
</script>

<script>
         async function addNewCity() {
        const newCity = document.getElementById("newCity").value.trim();
        const stateName = document.getElementById("state").value;
        const districtName = document.getElementById("district").value;

        if (!newCity || stateName === "" || districtName === "") {
            alert("Please enter a valid city name and select a state and district.");
            return;
        }

        const requestData = {
            StateName: stateName,
            DistrictName: districtName,
            NewCity: newCity
        };

        console.log("Sending Request:", requestData);

        try {
            const response = await fetch("/Benifitiary/AddCity", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(requestData)
            });

            if (!response.ok) {
                throw new Error("Failed to add city");
            }

            const result = await response.json();
            console.log("Response Data:", result);

            if (result.success) {
                alert("City added successfully!");

                // Add new city to the dropdown
                const citySelect = document.getElementById("city");
                let newOption = new Option(newCity, newCity);
                citySelect.add(newOption);

                closeCityModal();
            } else {
                alert("Error adding city: " + result.message);
            }
        } catch (error) {
            console.error("Error:", error);
            alert("Something went wrong!");
        }
    }

</script>
<script>
    document.getElementById('gstin').addEventListener('input', function () {
        const gstInput = this.value;
        const gstPattern = /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/;
        const errorDiv = document.getElementById('gstError');

        if (gstInput.length === 15 && !gstPattern.test(gstInput)) {
            errorDiv.textContent = "Invalid GSTIN format. Please enter a valid 15-character GST number.";
        } else {
            errorDiv.textContent = "";
        }
    });


        function limitLength(input, maxLength) {
        if (input.value.length > maxLength) {
            input.value = input.value.slice(0, maxLength);
        }
    }
</script>
<script>
    document.getElementById('panno').addEventListener('input', function () {
        const panInput = this.value;
        const panPattern = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
        const errorDiv = document.getElementById('panError');
        1
        if (gstInput.length === 10 && !gstPattern.test(gstInput)) {
            errorDiv.textContent = "Invalid Pan format. Please enter a valid 10-character Pan number.";
        } else {
            errorDiv.textContent = "";
        }
    });

    document.getElementById('panno').addEventListener('input', function () {

        function limitLength(input, maxLength) {
            if (input.value.length > maxLength) {
                input.value = input.value.slice(0, maxLength);
            }
        }
    });
</script>
<script>
    document.getElementById("vendorCode").addEventListener("change", function () {
        var code = this.value.trim();
        if (!code) return;

        fetch(`/Home/VendorCodeAvailable?code=${encodeURIComponent(code)}`)
            .then(res => res.json())
            .then(isAvailable => {
                if (isAvailable) {
                    document.getElementById("vendorCodeMsg").innerText = "Code is available";
                    document.getElementById("vendorCodeMsg").style.color = "green";
                } else {
                    document.getElementById("vendorCodeMsg").innerText = "Code already exists";
                    document.getElementById("vendorCodeMsg").style.color = "red";
                }
            });
    });
</script>
<script>
    function toggleOtherInput(selectElement) {
        const otherInputContainer = document.getElementById('otherVendorTypeContainer');
        const otherInput = document.getElementById('OtherVendorType');

        if (selectElement.value === 'others') {
            otherInputContainer.style.display = 'block';
            otherInput.setAttribute('name', 'VendorType');
            selectElement.removeAttribute('name');
        } else {
            otherInputContainer.style.display = 'none';
            otherInput.removeAttribute('required');
            otherInput.removeAttribute('name');
            selectElement.setAttribute('name', 'VendorType');
        }
    }
</script>








