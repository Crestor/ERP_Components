@using ERP_Component_DAL.Models;

<script src="sweetalert2.min.js"></script>
<link rel="stylesheet" href="sweetalert2.min.css">



@{
	ViewBag.Title = "Purchase Order";
	Layout = "~/Views/Shared/_LayoutINV.cshtml";
}
<link rel="stylesheet" href="/css/Product.css" />




@model List<Vendor>

<div class="table">



	<table>
		<thead>
			<tr>
				<th>S.No.</th>
				<th>Vendor Name</th>
				<th>Vendor Code</th>
				<th>Description</th>
				<th>Created At</th>
				<th>Taxable Amount</th>
				<th>Actions</th>
			</tr>
		</thead>



		<tbody id="geeks">


			@for (var i = 0; i < Model.Count; i++)
			{

				var x = Model[i];
				var index = i + 1;

				<tr id="row-@x.vendorId-@x.purchaseOrderId">


							<td>@index</td>
							<td>@x.vendorName</td>
							<td>@x.vendorCode</td>
							<td>@x.description</td>
							<td>@x.createdAt.ToShortDateString()</td>
							<td>@x.amount</td>
							<td>
						<div class="table-button">

							<button onclick="location.href='@Url.Action("PurchaseOrderForm", "Purchase", new { vendorId = @x.vendorId,purchaseOrderId = x.purchaseOrderId }, null)'">Generate Purchase Order</button>
							<button type="button" onclick="AddInvoice('@x.purchaseOrderId')">Convert To Bill</button>


								</div>
							</td>

						</tr>
			}
		</tbody>

	</table>




</div>






<script>

		async function AddInvoice(purchaseOrderId) {
		const { value: formValues } = await Swal.fire({
			title: "Enter Invoice Details",
			html: `
				<div style="display: flex; flex-direction: column; gap: 10px;">
					<label style="display: flex; justify-content: space-between; align-items: center;">
						<span>Invoice Number:</span>
						<input type="text" id="swal-input1" class="swal2-input" style="width: 60%;" />
					</label>
					<label style="display: flex; justify-content: space-between; align-items: center;">
						<span>Invoice Date:</span>
						<input type="date" id="swal-input2" class="swal2-input" style="width: 60%;" />
					</label>
				</div>
			`,
			focusConfirm: false,
			preConfirm: () => {
				const invoiceNumber = document.getElementById("swal-input1").value;
				const createdAt = document.getElementById("swal-input2").value;

				if (!invoiceNumber || !createdAt) {
					Swal.showValidationMessage(`Please enter both invoice number and date`);
					return false;
				}
				return { invoiceNumber, createdAt };
			},
			showCancelButton: true,
			confirmButtonText: "Submit"
		});

		if (formValues) {
			const data = {
				purchaseOrderId: purchaseOrderId,
				invoiceNumber: formValues.invoiceNumber,
				createdAt: formValues.createdAt
			};

				fetch('/Purchase/AddPurchaseInvoice', {
		method: 'POST',
		headers: {
			'Content-Type': 'application/json'
		},
		body: JSON.stringify(data)
	})
	.then(response => {
		if (response.ok) {
			Swal.fire('Success', 'Invoice submitted successfully!', 'success').then(() => {
				location.reload(); 
			});
		} else {
			Swal.fire('Error', 'Failed to submit invoice.', 'error');
		}
	})
	.catch(error => {
		console.error('Error:', error);
		Swal.fire('Error', 'Something went wrong.', 'error');
	});

		}
	}

</script>