@using ERP_Component_DAL.Models;
@{
    ViewBag.Title = "View Weaving Order";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}
<link rel="stylesheet" href="~/css/Product.css" />
@model AllocatedWork

<div class="table">
    <table>
        <thead>
            <tr>
                <th>S.No.</th>
                <th>Allocation Code</th>
                <th>Worker Name</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.allocatedWorks.Count; i++)
            {
                <tr>
                    <td>@(i + 1)</td>
                    <td>@Model.allocatedWorks[i].AllocationCode</td>
                    <td>@Model.allocatedWorks[i].WorkerName</td>
                    <td>@Model.allocatedWorks[i].Quantity</td>
                    <td>
                        <button type="button" onclick="showpopupforRecievedQuantity(
                            '@Model.allocatedWorks[i].AllocatedWorkID',
                            @Model.allocatedWorks[i].Quantity,
                            @Model.allocatedWorks[i].AllocatedYarnQty,
                            @Model.allocatedWorks[i].YarnQtyPerPiece)">
                            Received
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Popup Overlay -->
<div id="overlay" class="overlay" style="display:none;">
    <div class="Popuptable" style="justify-self:center">
        <p id="closepopup" style="cursor:pointer;color:black;font-weight:bold;">X</p>

        <form asp-action="RecieveWeavingOrder" asp-controller="Weaver" class="form-section">
            <h3>Received Details</h3>

            <div class="form-row">
                <label for="Quantity">Received Quantity</label>
                <input type="number" id="recievedquantity" name="RecievedQuantity" required />
            </div>

            <div id="showinvalidinput"></div>

            <div class="form-row">
                <label for="Wastage">Wastage</label>
                <input type="number" id="Wastage" name="Wastage" readonly />
            </div>

            <div class="form-row">
                <label for="RecievedDate">Received Date</label>
                <input type="date" id="receivedDate" name="RecievedDate" required />
            </div>

            <input type="hidden" id="workID" name="AllocatedWorkID" />

            <div class="button">
                <button type="submit" id="submitBtn" disabled>Submit</button>
            </div>
        </form>
    </div>
</div>

<script>
    let totalQuantity = 0;
    let yarnQtyPerPiece = 0;
    let allocatedYarnQty = 0;

    const inputQty = document.getElementById("recievedquantity");
    const wastageInput = document.getElementById("Wastage");
    const showInvalid = document.getElementById("showinvalidinput");
    const submitBtn = document.getElementById("submitBtn");

    function showpopupforRecievedQuantity(workId, quantity, yarnQtyAllocated, yarnPerPiece) {
        totalQuantity = quantity;
        yarnQtyPerPiece = yarnPerPiece;
        allocatedYarnQty = yarnQtyAllocated;

        inputQty.value = '';
        wastageInput.value = '';
        showInvalid.innerHTML = '';
        submitBtn.disabled = true;

        document.getElementById("workID").value = workId;
        document.getElementById("receivedDate").value = new Date().toISOString().split("T")[0];

        document.getElementById("overlay").style.display = 'block';
    }

    document.getElementById("closepopup").addEventListener("click", function () {
        document.getElementById("overlay").style.display = 'none';
        inputQty.value = '';
        wastageInput.value = '';
        showInvalid.innerHTML = '';
        submitBtn.disabled = true;
    });

    inputQty.addEventListener("input", function () {
        const receivedQty = parseFloat(this.value) || 0;

        showInvalid.innerHTML = '';

        let calculatedWastage =  allocatedYarnQty - (receivedQty * yarnQtyPerPiece);
        console.log("Wastage:", calculatedWastage);

        wastageInput.value = calculatedWastage;
        submitBtn.disabled = false;
    });
</script>
