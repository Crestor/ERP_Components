@using ERP_Component_DAL.Models;
@{
    ViewBag.Title = "View Phases";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}
<link rel="stylesheet" href="~/css/Product.css" />
@model Weaver

<style>
    #popupforWeaver,
    #popupforDeyer {
        display: none;
        position: fixed;
        top: 10%;
        margin-left: 45px;
        background: #fff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
        border-radius: 10px;
        z-index: 9999;
        width: 75%;
    }

    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 9998;
    }

    #showinvalidinput {
        color: red;
        position: absolute;
        font-size: 0.9rem;
        margin-top: 52px;
        left: 100px;
        z-index: 0;
    }
</style>

<div class="form-section">
    <h3>Start Weaving</h3>
    <div class="form-row">
        <label for="workOrderSeries">Work Order Series:</label>
        <input type="text" id="workOrderSeries" name="workOrderSeries" value="@Model.WorkOrderSeries" required readonly />
        <label for="productName">Product Name:</label>
        <input type="text" id="productName" name="productName" value="@Model.ProductName" required readonly />
    </div>
    <div class="form-row">
        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" name="quantity" value="@Model.Quantity" required readonly />
        <label for="Specification">Specification:</label>
        <input type="text" id="Specification" name="Specification" value="@Model.Specification" required readonly />
    </div>
    <div class="form-row">
        <label for="AllocationQuantity">Allocated Quantity:</label>
        <input type="text" id="AllocationQuantity" name="AllocationQuantity" value="@Model.AllocatedQuantity" required readonly />
        <label for="AllocatedDate">Allocated Date:</label>
        <input type="date" id="AllocatedDate" name="AllocatedDate" required />
    </div>
</div>

<h2>Material Details</h2>
<div class="table mt-7">
    <table>
        <thead>
            <tr>
                <th>Phase</th>
                <th>Work</th>
                <th>Time</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.workOrderPhases.Count; i++)
            {
                <tr>
                    <td>@Model.workOrderPhases[i].phase</td>
                    <td>@Model.workOrderPhases[i].phaseWork</td>
                    <td>@Model.workOrderPhases[i].phaseTime</td>
                    <td>@Model.workOrderPhases[i].status</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<form method="post" asp-action="AllocateToWeaver" asp-controller="Weaver">
    <div id="popupforWeaver">
        <i class="fas fa-window-close float-end" onclick="closePopup()"></i>
        <div class="form-section">
            <h3>Allocate Material To Weaver</h3>
            <div class="form-row">
                <label for="AllocationSeries">Allocation Series:</label>
                <input type="text" id="AllocationSeriesWeaver" name="AllocationSeries" readonly />
                <label for="weaverName">Weaver Name:</label>
                <select id="weaverName" name="WeaverId" required>
                    <option value="">Select Weaver</option>
                    @foreach (var weaver in Model.Weavers)
                    {
                        <option value="@weaver.WeaverId">@weaver.WeaverName</option>
                    }
                </select>
            </div>
            <div class="form-row">
                <label for="AllocationQuantity">Allocated Quantity:</label>
                <input type="text" id="AllocatedQuantity" name="AllocatedQuantity" required />
                <div id="showinvalidinput"></div>
                <label for="PerPiecePrize">Per Piece Prize:</label>
                <input type="number" id="PerPiecePrizeweaver" name="PerPiecePrize" required />
            </div>

            <input type="hidden" name="WorkOrderId" value="@Model.WorkOrderId" />

            <div class="button">
                <button type="submit">Allocate</button>
            </div>
        </div>
    </div>
</form>

<form method="post" asp-action="Allocationfordying" asp-controller="Weaver">
    <div id="popupforDeyer">
        <i class="fas fa-window-close float-end" onclick="closePopup()"></i>
        <div class="form-section">
            <h3>Allocate Material To Deyer</h3>
            <div class="form-row">
                <label for="AllocationSeries">Allocation Series:</label>
                <input type="text" id="AllocationSeriesDeyer" name="AllocationSeries" readonly />
                <label for="WorkerName">Deyer Name:</label>
                <select id="DeyerName" name="WorkerID" required>
                    <option value="">Select Deyer</option>
                    @foreach (var Dyer in Model.Dyer)
                    {
                        <option value="@Dyer.WeaverId">@Dyer.WeaverName</option>
                    }
                </select>
            </div>
            <div class="form-row" style="width:50%">
                <label for="Quantity">Quantity:</label>
                <input type="number" id="PerPiecePrizedyer" name="Quantity" value="@Model.Quantity" required />
            </div>

            <input type="hidden" name="WorkOrderId" value="@Model.WorkOrderId" />

            <div class="button">
                <button type="submit">Allocate</button>
            </div>
        </div>
    </div>
</form>

<div id="overlay" onclick="closePopup()"></div>

<div class="button">
    <button id="showpopupforWaever" type="button">Allocate To Weaver</button>
    <button id="showpopupforDeyer" type="button">Allocate for Deying</button>
    <button id="completedworkorder" onclick="location.href='@Url.Action("WorkOrderCompleted", "Weaver", new { workOrderID = Model.WorkOrderId })'">Complete</button>
</div>

<script>
    function closePopup() {
        document.getElementById("popupforWeaver").style.display = "none";
        document.getElementById("popupforDeyer").style.display = "none";
        document.getElementById("overlay").style.display = "none";
    }

    const showpopup = document.getElementById("showpopupforWaever");
    showpopup.addEventListener("click", function () {
        document.getElementById("popupforWeaver").style.display = "block";
        document.getElementById("overlay").style.display = "block";
    });

    const showpopupforDeyer = document.getElementById("showpopupforDeyer");
    showpopupforDeyer.addEventListener("click", function () {
        document.getElementById("popupforDeyer").style.display = "block";
        document.getElementById("overlay").style.display = "block";
    });

    document.addEventListener("DOMContentLoaded", function () {
        const totalQuantity = parseInt(@Model.Quantity);
        const allocatedQuantity = parseInt(@Model.AllocatedQuantity);

        const weaverBtn = document.getElementById("showpopupforWaever");
        const deyerBtn = document.getElementById("showpopupforDeyer");

        if (weaverBtn && deyerBtn) {
            if (totalQuantity === allocatedQuantity) {
                weaverBtn.style.display = "none";
                deyerBtn.style.display = "block";
            }
        }

        // Handle allocated quantity validation
        document.getElementById("AllocatedQuantity").addEventListener("input", function () {
            if (parseInt(this.value) >= totalQuantity - allocatedQuantity) {
                document.getElementById("showinvalidinput").innerHTML = "<span style='color: red;'>Allocated quantity cannot exceed total quantity.</span>";
                this.value = totalQuantity - allocatedQuantity;
            }
        });

        // Set allocation series
        let lastCode = localStorage.getItem("lastAllocationCode");
        const year = new Date().getFullYear();
        let newNumber = 1;

        if (lastCode) {
            const parts = lastCode.split("-");
            const lastYear = parseInt(parts[1]);
            const lastNum = parseInt(parts[2]);

            if (lastYear === year) {
                newNumber = lastNum + 1;
            }
        }

        const newCode = `AL-${year}-${String(newNumber).padStart(4, '0')}`;
        const inputWeaver = document.getElementById("AllocationSeriesWeaver");
        const inputDeyer = document.getElementById("AllocationSeriesDeyer");

        if (inputWeaver) inputWeaver.value = newCode;
        if (inputDeyer) inputDeyer.value = newCode;

        localStorage.setItem("lastAllocationCode", newCode);
    });

    const phase1Status = '@Model.workOrderPhases.Count > 0 ? Model.workOrderPhases[0].status : ""';
    const phase2Status = '@Model.workOrderPhases.Count > 1 ? Model.workOrderPhases[1].status : ""';

    if (phase1Status === "COMPLETED" && phase2Status === "COMPLETED") {
        document.getElementById("showpopupforWaever").style.display = "none";
        document.getElementById("showpopupforDeyer").style.display = "none";
        document.getElementById("completedworkorder").style.display = "block";
    }
    else if (phase1Status === "COMPLETED") {
        document.getElementById("showpopupforWaever").style.display = "none";
        document.getElementById("showpopupforDeyer").style.display = "block";
        document.getElementById("completedworkorder").style.display = "none";
    } else {
        document.getElementById("showpopupforWaever").style.display = "block";
        document.getElementById("showpopupforDeyer").style.display = "none";
        document.getElementById("completedworkorder").style.display = "none";
    }

    
</script>
